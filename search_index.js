var documenterSearchIndex = {"docs":
[{"location":"README/#LAR-TGW-3D","page":"LAR TGW 3D","title":"LAR TGW 3D","text":"","category":"section"},{"location":"README/","page":"LAR TGW 3D","title":"LAR TGW 3D","text":"Progetto 8b del corso di Calcolo Parallelo e Distribuito 2021/2022.","category":"page"},{"location":"README/#Membri-del-team:","page":"LAR TGW 3D","title":"Membri del team:","text":"","category":"section"},{"location":"README/","page":"LAR TGW 3D","title":"LAR TGW 3D","text":"Luca Maria Lauricella","category":"page"},{"location":"README/","page":"LAR TGW 3D","title":"LAR TGW 3D","text":"Valerio Marini","category":"page"},{"location":"#Riferimenti","page":"API Reference","title":"Riferimenti","text":"","category":"section"},{"location":"","page":"API Reference","title":"API Reference","text":"Questa pagina ha riferimenti a tutti i tipi e funzioni utilizzati.","category":"page"},{"location":"#Tipi","page":"API Reference","title":"Tipi","text":"","category":"section"},{"location":"","page":"API Reference","title":"API Reference","text":"Modules = [TGW3D]\nOrder = [:type]","category":"page"},{"location":"#TGW3D.ChainOp","page":"API Reference","title":"TGW3D.ChainOp","text":"ChainOp = SparseArrays.SparseMatrixCSC{Int8,Int}\n\nAlias declation of LAR-specific data structure. SparseMatrix in Compressed Sparse Column format, contains the coordinate representation of an operator between linear spaces of P-chains. Operators P-Boundary  P-Chain - (P-1)-Chain and P-Coboundary  P-Chain - (P+1)-Chain are typically stored as ChainOp with elements in -101 or in 01, for signed and unsigned operators, respectively.\n\n\n\n\n\n","category":"type"},{"location":"#TGW3D.Points","page":"API Reference","title":"TGW3D.Points","text":"Points = Array{Number,2}\n\nAlias declation of LAR-specific data structure. Dense Array{Number,2,1} M x N to store the position of vertices (0-cells) of a cellular complex. The number of rows M is the dimension of the embedding space. The number of columns N is the number of vertices.\n\n\n\n\n\n","category":"type"},{"location":"#Funzioni","page":"API Reference","title":"Funzioni","text":"","category":"section"},{"location":"","page":"API Reference","title":"API Reference","text":"Modules = [TGW3D]\nOrder = [:function]","category":"page"},{"location":"#TGW3D.frag_face-NTuple{5, Any}","page":"API Reference","title":"TGW3D.frag_face","text":"fragface( \t\tV::Points,          EV::ChainOp,          FE::ChainOp,  \t\tspidx::Vector{Int64},          sigma::Int64)\n\nPrende la faccia sigma e la trasforma in 2D per poter calcolare le intersezioni con le facce in sp_idx[sigma] ed ottenere la disposizione 2D della faccia sigma.\n\n\n\n\n\n","category":"method"},{"location":"#TGW3D.frag_face_channel-Tuple{Any, Any, Matrix, Any, Any, Any}","page":"API Reference","title":"TGW3D.frag_face_channel","text":"fragfacechannel(     inchan,      outchan,      V::Points,      EV::ChainOp,      FE::ChainOp,      sp_idx)\n\nFunziona che parallelizza, con l'utilizzo dei canali, la frammentazione delle facce in FE rispetto le facce in sp_idx.\n\n\n\n\n\n","category":"method"},{"location":"#TGW3D.merge_vertices","page":"API Reference","title":"TGW3D.merge_vertices","text":"merge_vertices(     V::Points,      EV::ChainOp,      FE::ChainOp,      [err=1e-4])\n\nRimuove i vertici congruenti ad un singolo rappresentatante, traduce i lati per tener  conto della congruenza ed otteniene nuove facce congruenti.\n\n\n\n\n\n","category":"function"},{"location":"#TGW3D.removeinnerloops-Tuple{Any, Any}","page":"API Reference","title":"TGW3D.removeinnerloops","text":"removeinnerloops(\n    g::Int64, \n    nFE::ChainOp)\n\nRimuove le facce all'interno dei cicli interni dalla matrice sparsa nFE. Il valore restituito ha g righe in meno rispetto all'input nFE.\n\n\n\n\n\n","category":"method"},{"location":"#TGW3D.spatial_arrangement","page":"API Reference","title":"TGW3D.spatial_arrangement","text":"spatial_arrangement(V::Points, copEV::ChainOp, copFE::ChainOp; [multiproc::Bool])\n\nCompute the arrangement on the given cellular complex 2-skeleton in 3D.\n\nA cellular complex is arranged when the intersection of every possible pair of cell of the complex is empty and the union of all the cells is the whole Euclidean space. The function returns the full arranged complex as a list of vertices V and a chain of borders EV, FE, CF.\n\nAdditional arguments:\n\nmultiproc::Bool: Runs the computation in parallel mode. Defaults to false.\n\n\n\n\n\n","category":"function"},{"location":"#TGW3D.spatial_arrangement_1","page":"API Reference","title":"TGW3D.spatial_arrangement_1","text":"function spatialarrangement1( \t\t\tV::Points, \t\t\tcopEV::ChainOp, \t\t\tcopFE::ChainOp,              [multiproc::Bool=false])\n\nSi occupa del processo di frammentazione delle facce per lâ€™utilizzo del planar arrangement.\t Richiama le funzioni frag_face e `merge_vertices' per ritornare i nuovi vertici, lati e facce.\n\n\n\n\n\n","category":"function"},{"location":"#TGW3D.spatial_arrangement_2","page":"API Reference","title":"TGW3D.spatial_arrangement_2","text":"function spatialarrangement2(     rV::Points,      rcopEV::ChainOp,      rcopFE::ChainOp,      [multiproc::Bool=false])\n\nTODO\n\n\n\n\n\n","category":"function"}]
}
